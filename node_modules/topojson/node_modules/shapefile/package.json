{
  "name": "shapefile",
  "version": "0.1.4",
  "description": "An implementation of the shapefile (.shp) spatial data format.",
  "keywords": [
    "geojson",
    "shapefile"
  ],
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mbostock/shapefile.git"
  },
  "main": "./index.js",
  "dependencies": {
    "iconv-lite": "0.2",
    "optimist": "0.3"
  },
  "devDependencies": {
    "vows": "0.7"
  },
  "scripts": {
    "test": "./node_modules/.bin/vows && echo"
  },
  "bin": {
    "dbfcat": "./bin/dbfcat",
    "shpcat": "./bin/shpcat",
    "shp2json": "./bin/shp2json"
  },
  "readme": "# Streaming Shapefile Parser\n\nBased on the [ESRI Shapefile Technical Description](http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf) and [dBASE Table File Format](http://www.digitalpreservation.gov/formats/fdd/fdd000325.shtml).\n\nCaveat emptor: this library is a work in progress and does not currently support all shapefile geometry types (see [shp.js](https://github.com/mbostock/shapefile/blob/master/shp.js) for details). It also only supports dBASE III and has no error checking. Please contribute if you want to help!\n\n## Reading a Shapefile\n\nThe main API for reading a shapefile is shapefile.<b>readStream</b>(<i>filename</i>[, <i>options</i>]). The supported options are:\n\n* *encoding* - the DBF encoding (defaults to ISO-8859-1)\n* *ignore-properties* - if true, don’t read properties (faster; defaults to false)\n\nThis method returns an [event emitter](http://nodejs.org/api/events.html) which emits three types of events:\n\n* *feature* - while reading features from the shapefile\n* *end* - when all features have been read\n* *error* - if an error occurs\n\nFeatures are emitted as [GeoJSON features](http://geojson.org/geojson-spec.html#feature-objects), not as shapefile primitives. That’s because GeoJSON objects are the standard representation of geometry in JavaScript, and they are convenient. If you want to access the shapefile primitives directly, use the private [shp](https://github.com/mbostock/shapefile/blob/master/shp.js) and [dbf](https://github.com/mbostock/shapefile/blob/master/dbf.js) classes instead.\n\nSee [index-test](https://github.com/mbostock/shapefile/blob/master/test/index-test.js) for an example converting a shapefile to a GeoJSON feature collection.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mbostock/shapefile/issues"
  },
  "homepage": "https://github.com/mbostock/shapefile",
  "_id": "shapefile@0.1.4",
  "_from": "shapefile@0.1"
}
